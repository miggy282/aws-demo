AWSTemplateFormatVersion: '2010-09-09'
# *** Change this to something useful for you!
Description: InfraPipeline

Parameters:
  # *** This value must always be passed in when creating / updating stack
  # "NoEcho" is set to true, for security, so token won't be visible when examining the resulting stack
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    Default: 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

  # *** The remaining parameters should either be:
  # - overridden via changing "Default" here (PREFERABLE, since then they're in source control)
  # - or you can pass them in when creating / updating the stack
  
  # *** The owner of the Github repo for this application.
  GitHubOwner:
    Type: String
    Default: miggy282


  GitHubRepo:
    Type: String
    Default: aws-demo

  
  GitHubBranch:
    Type: String
    Default: master
    

  # *** The stack name for the actual application we're deploying
  ApplicationStackName:
    Type: String
    Default: InfraPipeline
    AllowedPattern: "[A-Za-z0-9-]+"

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceCode
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            PollForSourceChanges: false
            OAuthToken: !Ref GitHubOAuthToken
          RunOrder: 1
      - Name: DeployVPC
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
           Category: Deploy
           Owner: AWS
           Provider: CloudFormation
           Version: '1'
          InputArtifacts:
           - Name: SourceCode
          Configuration:
           ActionMode: CREATE_UPDATE
           Capabilities: CAPABILITY_IAM
           RoleArn: !GetAtt CloudformationRole.Arn
           StackName:  DemoInfraVPC
           TemplatePath: !Sub "SourceCode::../infra-cf/vpc.yaml"
          RunOrder: 1
      - Name: DeploySecurityGroups
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
           Category: Deploy
           Owner: AWS
           Provider: CloudFormation
           Version: '1'
          InputArtifacts:
           - Name: SourceCode
          Configuration:
           ActionMode: CREATE_UPDATE
           Capabilities: CAPABILITY_IAM
           RoleArn: !GetAtt CloudformationRole.Arn
           StackName:  DemoInfraSG
           TemplatePath: !Sub "SourceCode::../infra-cf/sg.yaml"
          RunOrder: 1
      - Name: DeployALB
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: DemoInfraAlb
            TemplatePath: !Sub "SourceCode::../infra-cf/alb.yaml"
          RunOrder: 1
      - Name: DeployECS
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: DemoInfraECS
            TemplatePath: !Sub "SourceCode::../infra-cf/ecs.yaml"
          RunOrder: 1
      - Name: DeployProductServices
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: DemoInfraProductServices
            TemplatePath: !Sub "SourceCode::../infra-cf/backendservices.yaml"
          RunOrder: 1   
      - Name: DeployWebServices
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: DemoInfraProductServices
            TemplatePath: !Sub "SourceCode::../infra-cf/frontendservices.yaml"
          RunOrder: 1      
    
     


  # 'GithubWebhook' satisfies two requirements:
  # -- Means that updates are pushed from GitHub, rather than AWS having to poll
  # -- Means we can filter for required changes
  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
